{"version":3,"sources":["DOM.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array1","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"DOM.11581a70.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    create(string) {//新增\r\n        const container = document.createElement(\"template\")\r\n        container.innerHTML = string.trim();//去掉字符前后的空格内容。\r\n        return container.content.firstChild;\r\n    },\r\n    after(node, node2) {//node2插入node后\r\n        node.parentNode.insertBefore(node2, node.nextSibling);//即使是最后一个节点，操作也可以成功。\r\n    },\r\n    before(node, node2) {//node2插入node前\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n    append(parent, node) {//创建子节点\r\n        parent.appendChild(node);\r\n    },\r\n    wrap(node, parent) {//插入父节点\r\n        dom.before(node, parent);\r\n        dom.append(parent, node);//append可以将原位置的抹去。\r\n    },\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node;//只从树中移除，还存在与内存中可用。\r\n    },\r\n    empty(node) {//清空node的所有子节点，但保存下来不删除，仍可用。如果不想保留，直接node.innerHTML='';即可。\r\n        const array1 = [];\r\n        let x = node.firstChild;\r\n        while (x) {\r\n            array1.push(dom.remove(node.firstChild));\r\n            x = node.firstChild;\r\n        }\r\n        return array1;\r\n    },\r\n    attr(node, name, value) {//重载\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value);//修改节点的某个属性值。\r\n        } else if (arguments.length === 2) {\r\n            return node.getAttribute(name);//获取节点的某个属性值。\r\n        }\r\n    },\r\n    text(node, string) {//修改文本或查询内容\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {//适配，增强兼容性\r\n                node.innerText = string;\r\n            } else {\r\n                node.textContent = string;\r\n            }\r\n        } else if (arguments.length === 1) {\r\n            if ('innerText' in node) {//适配，增强兼容性\r\n                return node.innerText;\r\n            } else {\r\n                return node.textContent;\r\n            }\r\n        }\r\n    },\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string;\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML;\r\n        }\r\n    },\r\n    style(node, name, value) {\r\n        if (arguments.length === 3) {\r\n            //改样式，例如：dom.style(div,'color','red')\r\n            node.style[name] = value;\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                //查样式，例如：dom.style(div,'color')\r\n                return node.style[name];\r\n            } else if (name instanceof Object) {\r\n                //改样式，例如：dom.style(div,{color:'red'})\r\n                for (let key in name) {\r\n                    node.style[key] = name[key];\r\n                }\r\n            }\r\n        }\r\n\r\n    },\r\n    class: {\r\n        add(node, className) {//添加class\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {//移除\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {//查询\r\n            return node.classList.contains(className)\r\n        }\r\n    },\r\n    on(node, eventName, fn) {//监听\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {//关闭监听\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n    find(selector, scope) {//如果给了查找范围scope，就用。没给就在整个document内查找。\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n    parent(node) {\r\n        return node.parentNode;\r\n    },\r\n    children(node) {\r\n        return node.children;\r\n    },\r\n    siblings(node) {//兄弟节点\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)//伪数组先变成数组，才能使用filter\r\n    },\r\n    next(node) {\r\n        let x = node.nextSibling;\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x;\r\n    },\r\n    previous(node) {\r\n        let x = node.previousSibling;\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x;\r\n    },\r\n    each(nodeList, fn) {//遍历，fn给定如何操作\r\n        for (let i = 0; i < nodeList.length; i++) {\r\n            fn.call(null, nodeList[i])\r\n        }\r\n    },\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (node === list[i])\r\n                break\r\n        }\r\n        return i;\r\n    }\r\n\r\n\r\n};"]}